#
# Since: September, 2023
# Author: marcelo-ochoa
# Name: Dockerfile.193
# Description: Dockerfile to build Oracle DB 23c Free
#
# Copyright 2023 Marcelo Ochoa
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM oracle/database:19.3.0-ee AS builder

USER root

RUN mkdir /container-entrypoint-initdb.d && \
    mkdir /container-entrypoint-startdb.d && \
    chown oracle:dba /container-entrypoint*

USER oracle

ARG BUILD_MODE

ENV ORACLE_BASE=/opt/oracle \
    ORACLE_HOME=/opt/oracle/product/19c/dbhome_1 \
    INSTALL_DIR=/opt/install \
    INSTALL_FILE_1=$INSTALL_FILE_1 \
    INSTALL_RSP="db_inst.rsp" \
    CONFIG_RSP="dbca.rsp.tmpl" \
    PWD_FILE="setPassword.sh" \
    RUN_FILE="runOracle.sh" \
    START_FILE="startDB.sh" \
    CREATE_DB_FILE="createDB.sh" \
    CREATE_OBSERVER_FILE="createObserver.sh" \
    SETUP_LINUX_FILE="setupLinuxEnv.sh" \
    CHECK_SPACE_FILE="checkSpace.sh" \
    CHECK_DB_FILE="checkDBStatus.sh" \
    USER_SCRIPTS_FILE="runUserScripts.sh" \
    INSTALL_DB_BINARIES_FILE="installDBBinaries.sh" \
    RELINK_BINARY_FILE="relinkOracleBinary.sh" \
    CONFIG_TCPS_FILE="configTcps.sh" \
    SLIMMING=$SLIMMING \
    ENABLE_ARCHIVELOG=false \
    ARCHIVELOG_DIR_NAME=archive_logs \
    # To clone a database referred by PRIMARY_DB_CONN_STR
    CLONE_DB=false \
    # To create a standby database referred by PRIMARY_DB_CONN_STR
    STANDBY_DB=false \
    # Env var below should be in <HOST>:<PORT>/<SERVICE_NAME> format
    PRIMARY_DB_CONN_STR="" \
    # For creating dataguard observer
    DG_OBSERVER_ONLY=false \
    DG_OBSERVER_NAME="" \
    CHECKPOINT_FILE_EXTN=".created" \
    # Directory for keeping Oracle Wallet
    WALLET_DIR="" \
    ORACLE_PWD=Oracle_2023 \
    ORACLE_SID=XE \
    ORACLE_PDB=XEPDB1 \
    ALLOCATED_MEMORY=0

ENV PATH=$ORACLE_HOME/bin:$ORACLE_HOME/OPatch/:/usr/sbin:$ORACLE_BASE:$PATH \
    LD_LIBRARY_PATH=$ORACLE_HOME/lib:/usr/lib \
    CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib

COPY --chown=oracle:oinstall install.19c.sh container-entrypoint.sh resetPassword createAppUser healthcheck.sh "$INSTALL_DIR"/
COPY --chown=oracle:oinstall drop_from_pdbs.sql drop_from_cdb.sql "$ORACLE_HOME"/rdbms/admin/

RUN "$INSTALL_DIR"/install.19c.sh "${BUILD_MODE}"

##########################################################################################
### Layer 1 --> Core OS
##########################################################################################

FROM oraclelinux:8-slim AS os_layer

# Redefine environment variables, etc. as we copied everything from an empty image (scratch)
ENV ORACLE_BASE=/opt/oracle \
    ORACLE_BASE_CONFIG=/opt/oracle/product/19c/dbhome_1 \
    ORACLE_BASE_HOME=/opt/oracle/product/19c/dbhome_1 \
    ORACLE_HOME=/opt/oracle/product/19c/dbhome_1 \
    INSTALL_DIR=/opt/install \
    INSTALL_FILE_1=$INSTALL_FILE_1 \
    INSTALL_RSP="db_inst.rsp" \
    CONFIG_RSP="dbca.rsp.tmpl" \
    PWD_FILE="setPassword.sh" \
    RUN_FILE="runOracle.sh" \
    START_FILE="startDB.sh" \
    CREATE_DB_FILE="createDB.sh" \
    CREATE_OBSERVER_FILE="createObserver.sh" \
    SETUP_LINUX_FILE="setupLinuxEnv.sh" \
    CHECK_SPACE_FILE="checkSpace.sh" \
    CHECK_DB_FILE="checkDBStatus.sh" \
    USER_SCRIPTS_FILE="runUserScripts.sh" \
    INSTALL_DB_BINARIES_FILE="installDBBinaries.sh" \
    RELINK_BINARY_FILE="relinkOracleBinary.sh" \
    CONFIG_TCPS_FILE="configTcps.sh" \
    SLIMMING=$SLIMMING \
    ENABLE_ARCHIVELOG=false \
    ARCHIVELOG_DIR_NAME=archive_logs \
    # To clone a database referred by PRIMARY_DB_CONN_STR
    CLONE_DB=false \
    # To create a standby database referred by PRIMARY_DB_CONN_STR
    STANDBY_DB=false \
    # Env var below should be in <HOST>:<PORT>/<SERVICE_NAME> format
    PRIMARY_DB_CONN_STR="" \
    # For creating dataguard observer
    DG_OBSERVER_ONLY=false \
    DG_OBSERVER_NAME="" \
    CHECKPOINT_FILE_EXTN=".created" \
    # Directory for keeping Oracle Wallet
    WALLET_DIR="" \
    ORACLE_PWD=Oracle_2023 \
    ORACLE_SID=XE \
    ORACLE_PDB=XEPDB1 \
    ALLOCATED_MEMORY=0

ENV PATH=$ORACLE_HOME/bin:$ORACLE_HOME/OPatch/:/usr/sbin:$ORACLE_BASE:$PATH \
    LD_LIBRARY_PATH=$ORACLE_HOME/lib:/usr/lib \
    CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib

RUN mkdir -p "$ORACLE_BASE"/scripts/setup && \
    mkdir "$ORACLE_BASE"/scripts/startup && \
    mkdir -p "$ORACLE_BASE"/scripts/extensions/setup && \
    mkdir "$ORACLE_BASE"/scripts/extensions/startup && \
    ln -s "$ORACLE_BASE"/scripts /docker-entrypoint-initdb.d && \
    mkdir "$ORACLE_BASE"/oradata && \
    mkdir -p "$ORACLE_HOME" && \
    microdnf -y install oracle-database-preinstall-19c openssl hostname && \
    microdnf clean all && \
    ln -s "$ORACLE_BASE"/"$PWD_FILE" /home/oracle/ && \
    echo oracle:oracle | chpasswd && \
    chown -R oracle:dba "$ORACLE_BASE"

##########################################################################################
### Layer 2 --> Oracle Home without bin/oracle, lib, rdbms, and XE.7z
##########################################################################################

FROM os_layer AS oracle_home

COPY --from=builder --chown=oracle:oinstall "${ORACLE_BASE}" "${ORACLE_BASE}"

RUN rm    "${ORACLE_HOME}"/bin/oracle
RUN rm -r "${ORACLE_HOME}"/lib
RUN rm -r "${ORACLE_HOME}"/rdbms
RUN rm    "${ORACLE_BASE}"/"${ORACLE_SID}".7z


##########################################################################################
### Layer 3 --> Oracle binary (bin/oracle)
##########################################################################################

FROM oracle_home AS oracle_binary

COPY --from=builder --chown=oracle:oinstall "${ORACLE_HOME}"/bin/oracle "${ORACLE_HOME}"/bin/oracle

##########################################################################################
### Layer 4 --> Oracle lib
##########################################################################################

FROM oracle_binary AS oracle_lib

COPY --from=builder --chown=oracle:oinstall "${ORACLE_HOME}"/lib "${ORACLE_HOME}"/lib

##########################################################################################
### Layer 5 --> Oracle lib
##########################################################################################

FROM oracle_lib AS oracle_rdbms

COPY --from=builder --chown=oracle:oinstall "${ORACLE_HOME}"/rdbms "${ORACLE_HOME}"/rdbms

##########################################################################################
### Layer 6 --> Oracle (compressed) db files
##########################################################################################

FROM oracle_rdbms AS db_files

COPY --from=builder --chown=oracle:oinstall "${ORACLE_BASE}"/"${ORACLE_SID}".7z  "${ORACLE_BASE}"/
COPY --from=builder --chown=oracle:oinstall /etc/oratab /etc/oratab

LABEL org.opencontainers.image.source=https://github.com/marcelo-ochoa/oci-oracle-free

USER oracle
WORKDIR $ORACLE_BASE

RUN echo 'ORACLE_SID=${ORACLE_SID:-XE}; export ORACLE_SID=${ORACLE_SID^^}' > .bashrc

HEALTHCHECK CMD "${ORACLE_BASE}"/healthcheck.sh >/dev/null || exit 1

ENTRYPOINT ["container-entrypoint.sh"]
